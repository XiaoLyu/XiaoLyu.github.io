[{"title":"Hello World","url":"/2019/06/13/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"},{"title":"常用命令 for Mac","url":"/2019/06/11/2019-06-11-常用命令 for Mac/","content":"\n以下是一些常用命令。\n\n\n1.当前homebrew不自动更新\n\n```\n\texport HOMEBREW_NO_AUTO_UPDATE=true\n```\n\n2.显示隐藏文件\n\n```\n\tdefaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder\n```\n\n3.隐藏隐藏文件\n\n```\n\tdefaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder\n```\n\n4.配置path\n\n```\n\topen .bash_profile\n```\n"},{"title":"Jekyll+GitHub搭建个人博客","url":"/2019/06/11/2019-06-11-Jekyll+GitHub搭建个人博客/","content":"\n花了好多天，终于算勉强搭好了个人博客。这里选用的是Jekyll。Jekyll, transform your plain text into static websites and blogs.\n\n\n大概的步骤：\n\n+ 安装Ruby\n+ 安装jekyll和bundler\n+ 运行jekyll服务器\n+ jekyll主题选择\n+ 修改jekyll模板\n+ GitHub上建立仓库，commit到GitHub上\n\n\n# 一、安装jekyll\n\n\nInstall a full Ruby development environment and install Jekyll and bundler gems. 按照以下步骤来，https://jekyllrb.com/docs/installation/\n\n\n记住要在命令行里open .bash_profile添加path！\n\n```\n# Ruby path\nexport PATH=/usr/local/opt/ruby/bin:$PATH\nexport PATH=$HOME/.gem/ruby/2.6.9/bin:$PATH\n```\n\n然后创建测试项目，比如说创建一个名为myblog\n\n```\n// 创建项目\njekyll new myblog\n// 进入项目所在路径\ncd myblog\n// 运行项目\njekyll server\n```\n\n上面创建项目的时候要等一阵子。如果卡住，可能是有些包没有安装好或者是需要更改默认的source源。\n\n更改默认的source源：\n\n```\ngem sources --remove https://rubygems.org/\ngem sources -a https://gems.ruby-china.com\ngem sources -l\n```\n\n\nsource源有可能变化，注意更改。可以用bundler -v 和 jekyll -v查看它们的版本。\n\n\njekyll server启动起来之后，就可以在本地修改之后就查看效果了。可以看到server address：http://127.0.0.1:4000/ （后面有你设置的名称）\n\n\n\n# 二、jekyll主题选择\n\n我是在[Jekyll theme](http://jekyllthemes.org/)挑选jekyll模板的，根据自己需求修改。\n\njekyll目录结构：\n\t\t_posts 博客内容\n\t\t_layouts 网页排版\n\t\t_sites 最终生成的静态网页\n\t\t_config.yml 配置信息，这里修改\n\t\tassets css，images，js\n\n\n\n# 三、配置jekyll, GitPage\n\n\n1. GitHub创建仓库：(和用户名相同).github.io\n2. 可以用GitHub Desktop clone 到本地，将修改好的模板覆盖到clone的文件中。\n3. commit到GitHub上，要等一会才能看到效果。\n\n\n\n## 参考：\n\n> https://www.jianshu.com/p/25111a6002ec\n> http://jekyllthemes.org/\n> jekyll 官网:https://jekyllrb.com/\n> 怎样建立GitHub个人网站：http://jmcglone.com/guides/github-pages/\n> Jekyll prologue模板：https://github.com/chrisbobbe/jekyll-theme-prologue\n\n"},{"title":"MacOS 安装QT creator","url":"/2019/05/10/2019-05-10-MacOS 安装QT creator/","content":"### 1 安装PyQt5\n\n\n```\nbrew install qt\nbrew cask install qt-creator\n```\n\n### 2 在Qt Creator改Qt Versions\n\n\nPreferences-buid&run-Qt Versions-Add 添加，按 shift + cmd + g 然后输入 /usr/local/Cellar/qt，在版本号/bin 文件夹里找找 qmake\n\n\n然后在preferences-buid&run-kits-desktop-Qt version添加qt\n\n\n命令行中： open .bash_profile添加:\n\n\n```\nalias brewski=\"brew update && brew upgrade && brew cleanup && brew cask cleanup; brew doctor\"\n```\n\n如果遇到错误：\n\nfailed to parse default search paths from compiler output\n\n\n解决办法：\n\nkits中compiler c和C++都改成clang\n"}]